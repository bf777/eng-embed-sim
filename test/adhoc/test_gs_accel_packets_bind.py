#!/usr/bin/env python


import socket
import sys
import time

# Create a UDP socket
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM, socket.IPPROTO_UDP)

listen_address = ('localhost', 9100)
send_address = ('localhost', 9100)

#print >>sys.stderr, 'starting up on %s port %s' % server_address
sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)  # Reuse addresses
#sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEPORT, 1)  # ...Not on windows
s.setsockopt(socket.SOL_IP, socket.IP_MULTICAST_TTL, 20)
s.setsockopt(socket.SOL_IP, socket.IP_MULTICAST_LOOP, 1)

sock.bind(('127.0.0.1', 9100))  # NOTE: The packets will not reach the ground station if it's done like this
#sock.bind(('0.0.0.0', 9100))   # The packets will reach the ground station, but I think we can't receive any...
#sock.bind(listen_address)

# Packet grabbed from one generated by testGenerator (see react-groundstation/server/index.js, testGenerator(0x1003, payloads.accelerometer, "Flight Control");)
pkt = "\xd4\x06\x00\x00\x03\x10\x3c\x00\x07\x00\x00\x00\x9c\xff\x66\xfd\x00\x04\xe7\xfb\xa0\x41\xe7\xfb\xa0\x41\xe7\xfb\xa0\x41\x00\x00\x70\x42\x00\x00\x70\x42\x07\x00\x00\x00\x2e\xf8\x73\xec\x00\x10\x7d\x1f\x48\x43\x52\x58\x48\x43\x91\xad\x48\x43\x00\x00\xfa\x43\x00\x00\x16\x44\x7d\x4d"

# Packet from the virtual FCU
pkt = "\xb1\x00\x00\x00\x03\x10\x3c\x00\x04\x00\x00\x00\x41\x01\xb0\x01\x1f\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x41\x01\xb0\x01\x1f\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xf5\x46"

message = pkt   # May need to do something to this...

def listen_messages(sock):
    while True:
        data, server = sock.recvfrom(4096)
        print >>sys.stderr, 'received {} from {}'.format(data, server)

def send_messages(sock):
    while True:
        sent = sock.sendto(message, send_address)
        print sent
        time.sleep(0.1)

def main(sock):
    t_send = threading.Thread(target=send_messages, args=(sock,))
    t_send.daemon = True
    t_send.start()
    
    t_listen = threading.Thread(target=listen_messages, args=(sock,))
    t_listen.daemon = True
    t_listen.start()

    while True:
        time.sleep(0.1)

import threading

# send_messages(sock)  # works

t_main = threading.Thread(target=main, args=(sock,))
t_main.daemon = True
t_main.start()

while True:
    try:
        time.sleep(0.1)
    except:
        sys.exit(0)
